<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
     xmlns:content="http://purl.org/rss/1.0/modules/content/"
     xmlns:wfw="http://wellformedweb.org/CommentAPI/"
     xmlns:dc="http://purl.org/dc/elements/1.1/"
     xmlns:atom="http://www.w3.org/2005/Atom"
     xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
     xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
     xmlns:georss="http://www.georss.org/georss"
     xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#"
     xmlns:media="http://search.yahoo.com/mrss/"><channel>
  <title>Bibek's Digital Garden</title>
  <atom:link href="https://bpanthi977.com/braindump/data/rss.xml" rel="self" type="application/rss+xml" />
  <link>https://bpanthi977.com/braindump/</link>
  <description><![CDATA[]]></description>
  <language>en</language>
  <pubDate>Tue, 18 Feb 2025 18:42:48 -0600</pubDate>
  <lastBuildDate>Tue, 18 Feb 2025 18:42:48 -0600</lastBuildDate>
  <generator>Emacs 29.4 Org-mode 9.7.17</generator>
  <webMaster>Bibek Panthi</webMaster>
  <image>
    <url>https://bpanthi977.com/braindump/data/rss.png</url>
    <title>Bibek's Digital Garden</title>
    <link>https://bpanthi977.com/braindump/</link>
  </image>

  <item>
    <title>Graphics Shader</title>
    <link>https://bpanthi977.com/braindump/graphics_shader.html</link>
    <author>Bibek Panthi</author>
    <guid isPermaLink="false">B6E62CCB-FAC8-41A7-B3A9-C93D2A445CE1</guid>
    <pubDate>Sun, 26 Jan 2025 00:22:00 -0600</pubDate>

    <description><![CDATA[<p>
    (Edited on Jan 26, 2025)
    </p>

    <ul class="org-ul">
    <li><p>
    Shader are programs that run in GPU
    </p>

    <p>
    For CPU there are two main ISA: x86_64 and ARM that most machines use. Thus you can compile your code to these two ISA, and run the program.
    </p>

    <p>
    But for GPUs, each manufacturer has its own ISA and even more each of them have multiple generations of ISA being concurrently supported. E.g. NVIDIA has Lovelace, Ampere, Turning, etc, and same with AMD (RDNA3, RDNA2, etc.).
    </p>

    <p>
    This means you have to compile your same program multiple times if you want it to run on all platforms. So, one approach is to use a shader language that the graphics driver compiles to machine code. But compiling GPU programs on runtime is not ideal. This is slow, is prone to bugs and demands the device driver to ship with compiler.
    </p>

    <p>
    Another better approach is to use intermediate representation (e.g. SPIR-V, DXIL/DXBC, AIR). So, you compile your shader program to an intermediate representation (i.e. bytecode) which the device driver just-in-time compiles to to machine code and executes. But not all gpu drivers support the same bytecode. This depends on the GPU API that they implement.
    </p></li>

    <li><p>
    Graphics API are specifications
    </p>

    <p>
    OpenGL, Metal, Vulkan, DirectX11, DirectX12 are some of the well known APIs. It is the job/choice of the graphics driver to implement one or multiple of those APIs.  In addition to these apis the gpu device usually has it own apis too.
    </p>

    <p>
    Take the case of a Nvidia GPU. Their driver provides NVAPI that exposes all the capabilities of the GPU. In addition to that Nvidia drivers also provide the Vulkan, OpenGL and DirectX APIs. Since GPU do more than graphics, the driver may also provide other APIs such as CUDA or OpenCL for compute, Vulkan Video or NVDEC for video decoding.
    </p>

    <p>
    Incontrast Apple only supports the Metal API. It used to support OpenGL but it is now deprecated.
    </p></li>

    <li><p>
    There are many Shader IR
    </p>

    <p>
    Now, in regards to the shader intermediate representation format. Different graphics api have their own intermediate representation (IR/Bytecode) format. Vulkan and OpenGL have SPIR-V which aims to be OS and device independent. Microsoft's DirectX API has DXIL, DXBC. Apple's Metal API has AIR. And to produce the bytecode, each API specifies a (slightly) different programming languages: Metal has MSL, OpenGL has GLSL, DirectX has HLSL. Vulkan doesn't introduce new high level langauge or support other high level shader language. Vulkan only understands SPIR-V so you can use any language (GLSL or HLSL) as long as you have a compiler that compiles your shader code to SPIR-V.
    </p></li>
    </ul>


    <ul class="org-ul">
    <li>Note about GPU ISAs and Compilers:
    <ul class="org-ul">
    <li>Apple doesn't provide compiler for their ISA. You can only compile shaders written in MSL using Metal api. Their ISA is not open.</li>

    <li><p>
    Nvidia's <code>nvcc</code> compiles cuda code to bytecode called PTX. Then the PTX code is JIT compiled by GPU driver and executed in the GPU. PTX is a low level virtual machine and ISA independent of gpu architecture within nvidia's gpus. Alternatively, you can compile cuda code to <a href="https://modal.com/gpu-glossary/device-software/streaming-assembler">SASS</a> which is even more lower level and tied to specific gpu architecture of nvidia. At the end SASS is converted by GPU driver to machine code that the GPU executes.
    </p>

    <p>
    See <a href="https://docs.nvidia.com/cuda/cuda-compiler-driver-nvcc/#gpu-compilation">https://docs.nvidia.com/cuda/cuda-compiler-driver-nvcc/#gpu-compilation</a> for more details.
    </p>

    <blockquote>
    <p>
    In the CUDA naming scheme, GPUs are named sm_xy, where x denotes the GPU generation number, and y the version in that generation. Additionally, to facilitate comparing GPU capabilities, CUDA attempts to choose its GPU names such that if x1y1 &lt;= x2y2 then all non-ISA related capabilities of sm_x1y1 are included in those of sm_x2y2.
    </p>

    <table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


    <colgroup>
    <col  class="org-left" />

    <col  class="org-left" />
    </colgroup>
    <thead>
    <tr>
    <th scope="col" class="org-left">Code (sm_)</th>
    <th scope="col" class="org-left">Architecture Name</th>
    </tr>
    </thead>
    <tbody>
    <tr>
    <td class="org-left">50, 52, 53</td>
    <td class="org-left">Maxwell</td>
    </tr>

    <tr>
    <td class="org-left">60, 61, 62</td>
    <td class="org-left">Pascal</td>
    </tr>

    <tr>
    <td class="org-left">70, 72</td>
    <td class="org-left">Volta</td>
    </tr>

    <tr>
    <td class="org-left">75</td>
    <td class="org-left">Turing</td>
    </tr>

    <tr>
    <td class="org-left">80, 86, 87</td>
    <td class="org-left">Ampere</td>
    </tr>

    <tr>
    <td class="org-left">89</td>
    <td class="org-left">Ada</td>
    </tr>

    <tr>
    <td class="org-left">90, 90a</td>
    <td class="org-left">Hopper</td>
    </tr>

    <tr>
    <td class="org-left">100, 100a, 101, 101a, 120, 120a</td>
    <td class="org-left">Blackwell</td>
    </tr>
    </tbody>
    </table>
    </blockquote></li>
    </ul></li>

    <li>Resource:
    <ul class="org-ul">
    <li><a href="https://thebookofshaders.com">https://thebookofshaders.com</a></li>
    <li><a href="https://www.shadertoy.com/">https://www.shadertoy.com/</a></li>
    <li><a href="https://iquilezles.org/articles/distfunctions2d/">https://iquilezles.org/articles/distfunctions2d/</a></li>
    <li><a href="https://iquilezles.org/articles/distfunctions/">https://iquilezles.org/articles/distfunctions/</a></li>
    <li><a href="https://blog.johnnovak.net/2016/09/21/what-every-coder-should-know-about-gamma/">https://blog.johnnovak.net/2016/09/21/what-every-coder-should-know-about-gamma/</a></li>
    </ul></li>

    <li><p>
    Bare minmum example:
    </p>

    <pre class="example">
    yarn add @shopify/react-native-skia
    </pre></li>
    </ul>


    <div class="org-src-container">
    <pre class="src src-typescript"><span class="org-keyword">import</span> React <span class="org-keyword">from</span> <span class="org-string">"react"</span>;
    <span class="org-keyword">import</span> { Canvas, Skia, Shader, Fill} <span class="org-keyword">from</span> <span class="org-string">"@shopify/react-native-skia"</span>;

    <span class="org-keyword">const</span> <span class="org-variable-name">source</span> = Skia.RuntimeEffect.<span class="org-function-name">Make</span>(<span class="org-string">`</span>
    <span class="org-string">vec4 main(vec2 xy)</span>
    <span class="org-string">{</span>
    <span class="org-string">return vec4(1);</span>
    <span class="org-string">}</span>
    <span class="org-string">`</span>)!;

    <span class="org-keyword">function</span> <span class="org-function-name">App</span>(): <span class="org-type">JSX.Element</span> {
    <span class="org-keyword">return</span> (
    &lt;Canvas style={{ flex: 1 }}&gt;
    &lt;<span class="org-type">Fill</span>&gt;
    &lt;Shader source={source} /&gt;
    &lt;/Fill&gt;
    &lt;/Canvas&gt;
    );
    }

    <span class="org-keyword">export</span> <span class="org-keyword">default</span> App;
    </pre>
    </div>
    ]]></description>
</item>
<item>
  <title>Republic and Democracy</title>
  <link>https://bpanthi977.com/braindump/republic_and_democracy.html</link>
  <author>Bibek Panthi</author>
  <guid isPermaLink="false">5A64F02C-2019-4C66-9CDD-3D4C33F4E84B</guid>
  <pubDate>Tue, 18 Feb 2025 18:30:00 -0600</pubDate>

  <description><![CDATA[<div id="outline-container-ID-A360D0E9-7162-4080-BA7D-D0A02464770D" class="outline-3">
  <h3 id="ID-A360D0E9-7162-4080-BA7D-D0A02464770D">Definition</h3>
  <div class="outline-text-3" id="text-Definition">
  <p>
  Republic and Democracy both talk about governance, each focusing on different aspect.
  </p>

  <ul class="org-ul">
  <li>Republic is about structure of government
  <ul class="org-ul">
  <li>A Republic has no monarch. i.e. Head of state is Prime Minister or President,</li>
  </ul></li>

  <li>Democracy is when people's will is represented.
  <ul class="org-ul">
  <li>Direct Democracy: People vote on issues directly</li>
  <li>Indirect Democracy: People elect representative and they vote on the issues</li>
  </ul></li>
  </ul>

  <p>
  Additionally, in a pure democracy majority can rule over the minority but in a republic the constitution safegaurds the right of minority too. So, republic requires a constitution or a unwritten constitutional tradition.
  </p>
  </div>
  </div>
  <div id="outline-container-ID-FDAF0B62-959D-4762-9A6E-72EE97787D3B" class="outline-3">
  <h3 id="ID-FDAF0B62-959D-4762-9A6E-72EE97787D3B">Examples</h3>
  <div class="outline-text-3" id="text-Examples">
  <p>
  Most democratic countries are republic. Lets see some examples of different governments:
  </p>

  <ul class="org-ul">
  <li>Republic and Democracy: USA, Nepal</li>

  <li><p>
  Non republic but Democracy: UK, Canada.
  </p>

  <p>
  Because they have a monarch, though with limited power.
  </p></li>
  </ul>



  <ul class="org-ul">
  <li>Republic but not a democracy:
  <ul class="org-ul">
  <li>China: Republic (ruled by head of state) but not a true democracy</li>

  <li>Republic of Iran: Has elected officials like President but the unelected Supereme Leader, who is selected by an assembly of experts, holds the most power. Since Supreme leadership is not passed by heredity, it is a republic.</li>

  <li>Russian Federation: Calls itself a democracy but acts like a authoratarian state</li>
  </ul></li>

  <li>Neither republic nor democracy:
  <ul class="org-ul">
  <li>Absolute Monarchy: Saudi Arabia, UAE, Vatican City</li>

  <li>Authoritarian States:
  <ul class="org-ul">
  <li>North Korea,</li>
  <li>Qatar: It is Hereditary Absolute Monarchy but has Authoritarian Traits. Authoritarian because the opposition and freedom of people is supressed.</li>
  </ul></li>
  </ul></li>
  </ul>
  </div>
  </div>
  <div id="outline-container-ID-347B2B6F-1378-4D2C-811A-8214D1035753" class="outline-3">
  <h3 id="ID-347B2B6F-1378-4D2C-811A-8214D1035753">In Nepal</h3>
  <div class="outline-text-3" id="text-In-Nepal">
  <ul class="org-ul">
  <li>Democracy Day (प्रजातन्त्र दिवश) Falgun 7:
  <ul class="org-ul">
  <li>Rana regime ended On Falgun 7, 2007 (1951 Feb 18) and Nepal became a democracy.</li>
  <li>The King was still there, so it wasn't a republic yet.</li>
  <li>On Falgun 7, 2015 BS (1959 Feb 18), Nepali were able to exercise their voting right and BP Koirala became the first democratically elected Prime Minister [<a href="https://en.wikipedia.org/wiki/1959_Nepalese_general_election">wikipedia</a>].</li>
  </ul></li>
  </ul>


  <ul class="org-ul">
  <li><p>
  Republic Day (गणतन्त्र दिवश) Jestha 15:
  </p>

  <p>
  On 2065 Jestha 15 (28 May 2008) Nepal was declared first meeting of the Constituent Assembly of Nepal took place on which ended the 240-year reign of the Shah kings and declared Nepal a Federal Democratic Republic.
  </p></li>
  </ul>


  <table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


  <colgroup>
  <col  class="org-right" />

  <col  class="org-right" />

  <col  class="org-left" />

  <col  class="org-left" />
  </colgroup>
  <thead>
  <tr>
  <th scope="col" class="org-right">Time (AD)</th>
  <th scope="col" class="org-right">BS</th>
  <th scope="col" class="org-left">Event</th>
  <th scope="col" class="org-left">Governance</th>
  </tr>
  </thead>
  <tbody>
  <tr>
  <td class="org-right">1846</td>
  <td class="org-right">1903</td>
  <td class="org-left">Rana Rule</td>
  <td class="org-left">Autocracy</td>
  </tr>

  <tr>
  <td class="org-right">1951 Feb 18</td>
  <td class="org-right">2007 Falgun 7</td>
  <td class="org-left">Revolution by Nepali Congress</td>
  <td class="org-left">Democratic Monarchy</td>
  </tr>

  <tr>
  <td class="org-right">1959</td>
  <td class="org-right">2015</td>
  <td class="org-left">First election</td>
  <td class="org-left">Democratic Monarchy</td>
  </tr>

  <tr>
  <td class="org-right">1960</td>
  <td class="org-right">2017</td>
  <td class="org-left">King Mahendra introduced Panchayat</td>
  <td class="org-left">Panchayat (Authoritarian Monarchy)</td>
  </tr>

  <tr>
  <td class="org-right">1990</td>
  <td class="org-right">2046</td>
  <td class="org-left">People's Movement. King Birendra restored Democracy</td>
  <td class="org-left">Constitutional Monarchy</td>
  </tr>

  <tr>
  <td class="org-right">1996</td>
  <td class="org-right">2052</td>
  <td class="org-left">Maoist Insurgency started</td>
  <td class="org-left">Constitutional Monarchy</td>
  </tr>

  <tr>
  <td class="org-right">2006</td>
  <td class="org-right">2063</td>
  <td class="org-left">Second People's Movement (लोकतन्त्र आन्दोलन). King Gyanendra restored Parliament</td>
  <td class="org-left">Constitutional Monarchy</td>
  </tr>

  <tr>
  <td class="org-right">2008 May 28</td>
  <td class="org-right">2065 Jestha 15</td>
  <td class="org-left">Nepal became Federal Democratic Republic</td>
  <td class="org-left">Democratic Republic</td>
  </tr>

  <tr>
  <td class="org-right">2015 Sept 20</td>
  <td class="org-right">2072 Ashoj 3</td>
  <td class="org-left">Constitution of Nepal 2072</td>
  <td class="org-left">Democratic Republic</td>
  </tr>
  </tbody>
  </table>
  </div>
  </div>
  ]]></description>
</item>
<item>
  <title>Email Security</title>
  <link>https://bpanthi977.com/braindump/email_security.html</link>
  <author>Bibek Panthi</author>
  <guid isPermaLink="false">21BD292C-B737-44FB-AA55-914D9593E9CF</guid>
  <pubDate>Sun, 12 Jan 2025 17:12:00 -0600</pubDate>

  <description><![CDATA[<p>
  Today, I was exploring the mail feature inside Emacs and while trying stuff out I sent an email from one of my email addresses to another. Surprisingly it worked. Surprising because I hadn't given Emacs any of my passwords or credentials! So how did it work? I also tried the same using the <code>sendmail</code> program from my local machine and also from a server. In both cases, the email was again received. And in all cases, I hadn't provided the password!!!
  </p>

  <p>
  We use email everyday for personal communication, website logins, OTPs and also to reset passwords for all kinds of websites and services. But are emails in themselves secure? Can I send you an email pretending to be someone else? Would you notice? Probably yes, but maybe not.
  </p>

  <p>
  Email are sent using SMTP (Simple Mail Transfer Protocol). SMTP transfers email messages using a plain text format which has some headers at the beginning and an text encoded email body after the headers.
  </p>

  <p>
  SMTP doesn't specify any method to authenticate the sender of the email. So if your are using plain old SMTP, then I (or anyone) can send you an email with a `From: ceo@google.com` header field and you wouldn't know if it is really from google or not. This is bad. So, obviously there have been some measures devised to authenticate the sender of the email. Two main methods are <code>SPF</code> (Sender Policy Framework) and <code>DKIM</code> (DomainKeys Identified Mail). These methods make email secure. Kind of.
  </p>
  <div id="outline-container-ID-D0B6DF40-8B18-431D-A788-45193C340DE8" class="outline-3">
  <h3 id="ID-D0B6DF40-8B18-431D-A788-45193C340DE8">SPF (Sender Policy Framework)</h3>
  <div class="outline-text-3" id="text-SPF-(Sender-Policy-Framework)">
  <p>
  As per Sender Policy Framework, the recipient checks the IP address of sender with a set of allowed IP addresses for the sender's domain. i.e. If the server receives an email from <code>1.2.3.4</code> from abcd@gmail.com<sup><a id="fnr.1" class="footref" href="#fn.1" role="doc-backlink">1</a></sup> then, it will check whether or not the IP <code>1.2.3.4</code> is an allowed IP address for the domain <code>gmail.com</code>. The list of such allowed IPs is provided using TXT records of DNS <sup><a id="fnr.2" class="footref" href="#fn.2" role="doc-backlink">2</a></sup>.
  </p>

  <p>
  If we check the <code>TXT</code> record of <code>gmail.com</code> then it has a record with <code>v=spf1</code> that redirects to <code>_spf.google.com</code>.
  </p>

  <div class="org-src-container">
  <pre class="src src-shell">dig +short -t txt gmail.com
  </pre>
  </div>

  <pre class="example">
  "v=spf1 redirect=_spf.google.com"
  </pre>



  <p>
  The TXT record for SPF in <code>_spf.google.com</code> further asks to include the records from <code>_netblocks.google.com</code> which finally lists some IP subnet that are whitelisted for use by <code>gmail.com</code>.
  </p>

  <div class="org-src-container">
  <pre class="src src-shell">dig +short -t txt _spf.google.com
  </pre>
  </div>

  <pre class="example">
  "v=spf1 include:_netblocks.google.com include:_netblocks2.google.com include:_netblocks3.google.com ~all"
  </pre>



  <div class="org-src-container">
  <pre class="src src-shell">dig +short -t txt _netblocks.google.com
  </pre>
  </div>

  <pre class="example">
  "v=spf1 ip4:35.190.247.0/24 ip4:64.233.160.0/19 ... ip4:216.239.32.0/19 ~all"
  </pre>



  <p>
  The <code>~all</code> indicates that the mail can be accepted from anyone (any IP) but it should be marked as unsafe or spam if the IP doesn't fall within the subnets specified. Alternatively, <code>-all</code> indicates that recipient mail-server should accept mail from <code>abcd@xyz.com</code> only when the IP matches. And <code>+all</code> would state that mail-server can accept mail from any server.
  </p>

  <p>
  Why does <code>gmail.com</code> use <code>~all</code> instead of <code>-all</code>? I don't know.
  </p>

  <p>
  Anyways, SPF is one method how emails are verified. Next is DKIM.
  </p>
  </div>
  </div>
  <div id="outline-container-ID-F1322126-6831-408D-8F85-15B6172BE90F" class="outline-3">
  <h3 id="ID-F1322126-6831-408D-8F85-15B6172BE90F">DKIM (DomainKeys Identified Mail)</h3>
  <div class="outline-text-3" id="text-DKIM-(DomainKeys-Identified-Mail)">
  <p>
  In DKIM system, emails are validated using Digital Signatures (i.e. Public key and Private key). The sender computes digital signature of the email using its private key and sends the signature along with the email inside the headers. The recipient can check that signature using the public key and can be sure that the email hasn't been tampered with. To find the public key of the sender, <code>DKIM</code> uses same techniques as <code>SPF</code> for IP addresses: DNS records <sup><a id="fnr.3" class="footref" href="#fn.3" role="doc-backlink">3</a></sup>. Let's take an example. gmail.com might send an email with a following header <sup><a id="fnr.4" class="footref" href="#fn.4" role="doc-backlink">4</a></sup>:
  </p>

  <p class="verse">
  DKIM-Signature: v=1;<br />
  &#xa0;&#xa0;&#xa0;&#xa0;a=rsa-sha256;<br />
  &#xa0;&#xa0;&#xa0;&#xa0;c=relaxed/relaxed;<br />
  &#xa0;&#xa0;&#xa0;&#xa0;d=gmail.com;<br />
  &#xa0;&#xa0;&#xa0;&#xa0;s=20230601;<br />
  &#xa0;&#xa0;&#xa0;&#xa0;h=content-transfer-encoding:subject:from:to:date:cc:reply-to;<br />
  &#xa0;&#xa0;&#xa0;&#xa0;bh=nDb91RUuDSdLXRVz6gTMVWYOt/Q8OiaPfAUgvs5A9lQ=;<br />
  &#xa0;&#xa0;&#xa0;&#xa0;b=CiFCAne44lKRb+ &#x2026; fBjknriXDtfzvMSqIhb55SgamIxM7oXhG/Q==<br />
  </p>

  <p>
  This header has information on how to check the digital signature in the <code>h</code>, <code>bh</code> and <code>b</code> fields. I'll about these shortly. But first lets find the public key of the domain <code>gmail.com</code>. The public key is in the TXT record of <code>&lt;selector&gt;._domainkey.&lt;domain&gt;</code>. The <code>selector</code> value is sent along with the email as the <code>s</code> field. Here the selector is given by <code>s=20230601</code>. So querying the DNS record, we get the public key:
  </p>

  <div class="org-src-container">
  <pre class="src src-shell">dig +short -t txt 20230601._domainkey.gmail.com
  </pre>
  </div>

  <pre class="example">
  "v=DKIM1; k=rsa; p=MIIBIjANBgkqhk ... niwXwIDAQAB"
  </pre>



  <p>
  The <code>p</code> field is the public key for domain of <code>gmail.com</code>. Now that we have the public key, let's see how the digital signature is created and checked.
  </p>

  <p>
  The basic idea of Digital Signature is this: Sender has private key and recipient has corresponding public key. Digital signature of a string is just the hash of the string encrypted with the private key. And public key only correctly decrypts the string encrypted with its corresponding private key. So, the client can itself compute the hash of the string and compare that hash with the decrypted hash. This way the client knows for sure that the sender has the private key.
  </p>


  <p>
  First of all the sender computes the hash of the email body and includes that hash value in the <code>bh</code> field. Now it concatenates that hash value with some other fields of the email (like subject, from, to &#x2026; specified in the <code>h</code> field) and computes the digital signature of that string. This digital signature is sent in the <code>b</code> field. Now the recipient can compute the hash itself and check that against the digital signature. If this checks out, then recipient can be certain that the fields of the email and the body of email haven't been modified.
  </p>

  <p>
  So, using <code>SPF</code> and <code>DKIM</code> now we can know that the sender is valid and the data inside the email hasn't been tampered by anyone. Now, a final piece of this system is DMARC.
  </p>
  </div>
  </div>
  <div id="outline-container-ID-0DAF3D82-718B-4C6B-9D27-F0637F950073" class="outline-3">
  <h3 id="ID-0DAF3D82-718B-4C6B-9D27-F0637F950073">DMARC (Domain-based Message Authentication Reporting and Conformance)</h3>
  <div class="outline-text-3" id="text-DMARC-(Domain-based-Message-Authentication-Reporting-and-Conformance)">
  <p>
  DMARC tells the recipient what to do after checking the SPF and DKIM records. DMARC is specified using a TXT record in <code>_dmarc.domain</code>. For example:
  </p>

  <div class="org-src-container">
  <pre class="src src-shell">dig +short -t txt _dmarc.gmail.com
  </pre>
  </div>

  <pre class="example">
  v=DMARC1; p=none; sp=quarantine; rua=mailto:mailauth-reports@google.com
  </pre>



  <p>
  The DMARC record for <code>gmail.com</code> says that the recipient doesn't need to quarantine or reject the emails that fail DKIM and SPF checks but they should report those errors back to <code>mailauth-reports@google.com</code>.
  </p>

  <ul class="org-ul">
  <li><code>p=none</code> [Domain Policy = none] means no special treatment for emails from domain.</li>
  <li><code>sp=quarantine</code> [Subdomain Policy = quarantine] means mark email as suspicious if the DKIM and SPF don't check out when receiving email from subdomains of gmail.com.</li>
  </ul>

  <p>
  Why does gmail.com have such relaxed policy instead of having <code>p=quarantine</code> or <code>p=reject</code>? I don't know. But let's check if we can exploit this to send an email as someone else.
  </p>
  </div>
  </div>
  <div id="outline-container-ID-0AE3161B-E462-4E9E-BA65-1C1F226AC535" class="outline-3">
  <h3 id="ID-0AE3161B-E462-4E9E-BA65-1C1F226AC535">Exploit Attempt</h3>
  <div class="outline-text-3" id="text-Exploit-Attempt">
  <p>
  If you have the <code>sendmail</code> program installed, you can create a file (say <code>email.txt</code>) as follows:
  </p>

  <p class="verse">
  To: your.friend@domain.com<br />
  From: his.boss@gmail.com<br />
  Subject: Salary hike!<br />
  <br />
  Hey! &lt;Your Friend Name&gt;<br />
  <br />
  In appreciation of your great work, I have decided to double your salary.<br />
  <br />
  With regards,<br />
  &lt;Boss Name&gt;<br />
  </p>

  <p>
  And try a prank with your friend:
  </p>
  <div class="org-src-container">
  <pre class="src src-shell">sendmail your.friend@domain.com &lt; email.txt
  </pre>
  </div>

  <p>
  <code>sendmail</code> program talks to mail server at <code>domain.com</code> using SMTP. And sends the email as coming from <code>his.boss@gmail.com</code>. The receiving mail server would now check the IP address using <code>SPF</code>, which will obviously fail. And as for <code>DKIM</code>, we didn't ask sendmail to include digital signatures, so that will fail too.
  </p>

  <p>
  But the email might just go in the inbox of your friend. For the first few time I tried sending email from one of my accounts to my other accounts, it went. After a few emails, it started going to spam folder and now such emails don't go. This might be due to some extra tricks gmail does.
  </p>
  </div>
  </div>
  <div id="outline-container-ID-82831C0E-78E3-4E6E-8837-864B9313CBA9" class="outline-3">
  <h3 id="ID-82831C0E-78E3-4E6E-8837-864B9313CBA9">Is this scary? What can you do?</h3>
  <div class="outline-text-3" id="text-Is-this-scary?-What-can-you-do?">
  <p>
  What if you receive such email? Is <code>gmail.com</code> reckless in using DMARC policy of <code>p=none</code>? <code>outlook.com</code> also has the  same policy. There must be some reason for these behaviors, which I don't know yet.
  </p>

  <p>
  In any case, don't worry much <sup><a id="fnr.5" class="footref" href="#fn.5" role="doc-backlink">5</a></sup>, although Gmail allows such emails, it shows them as probable spam in its web interface. So, if you use the web interface (i.e. gmail.com website) for your emails, you'll notice such unverified emails right away.
  </p>


  <div id="figure-1" class="figure">
  <p><img src="data/email_security/email_marked_spam-20250111213022.png" alt="email_marked_spam-20250111213022.png" width="800" />
  </p>
  <p><span class="figure-number">Figure 1: </span>Email marked spam</p>
  </div>

  <p>
  But when I was tried this, I had used Thunderbird to view the email. And it provided no indication that the email was unverified. Here Thunderbird could have done something better.
  </p>

  <p>
  It is the job of recipient mail server to check SPF and DKIM. And after it does that, it adds an 'Authentication-Results' header to the email headers specifying if the checks were successful or not. It would be better if Thunderbird showed those results by default. Right now, I have installed an add-on called <a href="https://addons.thunderbird.net/en-US/thunderbird/addon/dkim-verifier/">DKIM Verifier</a> and turned on the 'Read Authentication-Results header' option in its settings. Now it shows unverified emails in red color. I am not an expert in these matters, but if you use Thunderbird, you should do so too.
  </p>
  </div>
  </div>
  <div id="outline-container-ID-BC2CB7FA-DF54-44ED-B395-B4766E47818F" class="outline-3">
  <h3 id="ID-BC2CB7FA-DF54-44ED-B395-B4766E47818F">Conclusion</h3>
  <div class="outline-text-3" id="text-Conclusion">
  <p>
  When you see something interesting, dig deeper and write a blog about it.
  </p>
  </div>
  </div>
  ]]></description>
</item>
<item>
  <title>Bloom Filter</title>
  <link>https://bpanthi977.com/braindump/bloom_filter.html</link>
  <author>Bibek Panthi</author>
  <guid isPermaLink="false">A13B347A-4210-406F-817E-5FC95345369E</guid>
  <pubDate>Mon, 23 Dec 2024 11:02:00 -0600</pubDate>

  <description><![CDATA[<p>
  Bloom Filter are memory efficient data strucutre that return "Firm NO" if data doesn't exist or a "may-be yes" if it may exist.
  </p>

  <p>
  To create a bloom filter,
  </p>
  <ul class="org-ul">
  <li>create a bit array</li>
  <li>loop over the data
  <ul class="org-ul">
  <li>hash the data to get an index</li>
  <li>set the bit to 1 at that index</li>
  </ul></li>
  </ul>

  <p>
  Now if we want to check if a certain data exists or not hash the data to get a index and check the bit at that index. This may return a false positive, but never a false negative.
  </p>

  <p>
  See also:
  </p>
  <ul class="org-ul">
  <li>How bloom filters made SQLite 10x faster: <a href="https://news.ycombinator.com/item?id=42486610">news.ycombinator</a>, <a href="https://avi.im/blag/2024/sqlite-past-present-future/">avi.im</a></li>
  </ul>
  ]]></description>
</item>
<item>
  <title>Different Conceptions of Learning</title>
  <link>https://bpanthi977.com/braindump/different_conceptions_of_learning.html</link>
  <author>Bibek Panthi</author>
  <guid isPermaLink="false">E7FBC44C-D2DC-4CB4-8241-4C4EB00B8119</guid>
  <pubDate>Mon, 30 Dec 2024 16:58:00 -0600</pubDate>

  <description><![CDATA[<p>
  A paper by <a href="pei_wang.html#ID-B38DF962-8FC3-4FF6-95FC-055230355920">Pei Wang</a>. [<a href="papers/Different Conceptions of Learning.pdf#page=1">pdf:</a>] [<a href="https://cis.temple.edu/~pwang/Publication/conceptions-of-learning.pdf">Paper: cis.temple.edu</a>] [<a href="https://cis.temple.edu/~pwang/Talks/AGI16-Learning.pdf">Presentation Slides: csi.temple.edu</a>]
  </p>

  <p>
  Learning can be of two types (there might be other types):
  </p>
  <ul class="org-ul">
  <li>Algorithmic Learning
  <ul class="org-ul">
  <li>Learning follows an algorithm</li>
  <li>Takes training data as input and then outputs a model</li>
  <li>The model is an algorithm that carries out domain task</li>
  </ul></li>

  <li><a href="inferential_learning.html#ID-56D67CE7-E47A-4D01-B885-72685C5D0D1E">Inferential Learning</a>
  <ul class="org-ul">
  <li>System's knowledge bases is represented in a set of beliefs</li>
  <li>Learning is updating the topological structures as well as weights of those beliefs</li>
  <li>Updates is done through inference rules</li>
  <li>The system can be queried for answers.</li>
  </ul></li>
  </ul>

  <p>
  Inferential Learning appeared in the early days of <a href="machine_learning.html#ID-5b3ac5b3-f28b-4f5f-bdea-c25b5002c622">ML</a> but now lost favor to Deep Learning.
  However AGI research still has many challenges and the authors think that compared to deep neural networks, inferential learning may provide better alternative as learning paradigm of AGI [<a href="file:///Users/bpanthi977/Documents/synced/Notes/papers/Different Conceptions of Learning.pdf#page=9">Page 9 / Conclusions</a>].
  </p>

  <p>
  Differences:
  </p>
  <table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


  <colgroup>
  <col  class="org-left" />

  <col  class="org-left" />

  <col  class="org-left" />
  </colgroup>
  <thead>
  <tr>
  <th scope="col" class="org-left">Aspect</th>
  <th scope="col" class="org-left">Algorithm Learning (NN)</th>
  <th scope="col" class="org-left">Inferential Learning (NARS)</th>
  </tr>
  </thead>
  <tbody>
  <tr>
  <td class="org-left">Representation</td>
  <td class="org-left">Vectors</td>
  <td class="org-left">Sentences of formal language</td>
  </tr>

  <tr>
  <td class="org-left">&#xa0;</td>
  <td class="org-left">Distributed</td>
  <td class="org-left">In-between local and distributed (<a href="file:///Users/bpanthi977/Documents/synced/Notes/papers/Different Conceptions of Learning.pdf#page=7">Page 7</a>)</td>
  </tr>

  <tr>
  <td class="org-left">Network</td>
  <td class="org-left">Layered network</td>
  <td class="org-left">Graph Network</td>
  </tr>

  <tr>
  <td class="org-left">&#xa0;</td>
  <td class="org-left">Fixed topology</td>
  <td class="org-left">Dynamic topology</td>
  </tr>

  <tr>
  <td class="org-left">Task</td>
  <td class="org-left">Input/Output Mapping</td>
  <td class="org-left">Any question can be asked</td>
  </tr>

  <tr>
  <td class="org-left">Learning</td>
  <td class="org-left">Training phase</td>
  <td class="org-left">Life long learning</td>
  </tr>

  <tr>
  <td class="org-left">Learning  Algorithm</td>
  <td class="org-left">Backprop, Gradient Descent</td>
  <td class="org-left">Inference Rules of Logic</td>
  </tr>
  </tbody>
  </table>

  <p>
  Algorithmic learning is "using an algorithm to learn an algorithm". While in inferential learning there is a dynamic interaction between multiple algorithms which is more general but less predictible than the input-output mapping using a single algorithm paradigm of Algorithmic learning.
  </p>
  <div id="outline-container-ID-F25B6972-8F22-4AA4-B864-BA4906599610" class="outline-3">
  <h3 id="ID-F25B6972-8F22-4AA4-B864-BA4906599610">NARS - Non Axiomatic Reasoning System</h3>
  <div class="outline-text-3" id="text-NARS---Non-Axiomatic-Reasoning-System">
  <p>
  NARS is an example of a system that does inferential learning. It is based on the following definition of intelligence:
  </p>

  <blockquote id="intelligence_definition">
  <p>
  “Intelligence” is the ability for a system to adapt given insufficient knowledge and resources. That is, the system must depend on finite resources to make real-time response while being open to unanticipated problems and events.
  </p>

  <p>
  Consequently, the system’s solutions are usually not absolutely optimal, but the best the system can find at the time, and the system could always do better if it had more knowledge and resources. [<a href="papers/Different Conceptions of Learning.pdf#page=3">Different Conceptions of Learning.pdf: Page 3</a>]
  </p>
  </blockquote>

  <p>
  NARS consists of a knowledge base, a collection of inference rules and a control mechanism that applies the rules and updates, queries the knowledge base.
  </p>

  <ul class="org-ul">
  <li>Its knowledge base is represented as a graph of
  <ul class="org-ul">
  <li>Nodes = Representing terms</li>
  <li>Link  = Statement about those terms (with weight = truth value)</li>
  <li>Along with priority values of the nodes and links that affect how the terms and statements are choosen for inference.</li>
  </ul></li>

  <li>As input comes
  <ul class="org-ul">
  <li>new nodes, links are formed,</li>
  <li>the weights of old links are updated,</li>
  <li>and priority of statements are updated</li>
  </ul></li>

  <li>The statements of NARS have a truth value of belief assigned to them. Which is a pair of two numbers: Frequency, Confidence
  <ul class="org-ul">
  <li>Frequency = ratio of positive evidence among total evidence</li>
  <li>Confidence = ratio of current evidence to future evidence that can arrive</li>
  </ul></li>
  </ul>


  <p>
  Thus NARS is not just do purely deductive inference and but also other type of logical inference. It can also compose terms (using operation similar to set operations: union, intersection, difference) to create new terms, and do inteference on statments about them [<a href="file:///Users/bpanthi977/Documents/synced/Notes/papers/Different Conceptions of Learning.pdf#page=5">Page 5</a>].
  </p>

  <p>
  An example of how generalization works in NARS is: Say the system gets an observatoin "Tweety flies". (Tweety is a cartoon character, a bird) Then the system can do following generalization:
  </p>
  <ol class="org-ol">
  <li>"Canaries fly" using the informmation that "Tweety is a canary".</li>
  <li>"Birds fly" using the information that "Tweety is a bird"</li>
  <li>"Animals fly" using the information that "Tweety is an animal".</li>
  </ol>

  <p>
  The last is an over-generalization which will loose priority due to low frequency of evidence (or through negative evidence), the first is an under-generalization which will loose priority through low confidence (from less total evidence). The second "Birds fly" which is a proper generalization will get high priority due to higher frequency of positive evidence compared to other two.
  </p>

  <p>
  Other properties of NARS are:
  </p>

  <ul class="org-ul">
  <li><p>
  Statements are of Subject-copula-predicate format (copula <sup><a id="fnr.2.2" class="footref" href="#fn.2" role="doc-backlink">2</a></sup> means connecting word). Statement can be of different form, denoting inheritance, equivalence, implication.
  </p>

  <p>
  E.g. Some statements are of the form: \(S \rightarrow P \langle t \rangle\) which means `S` is a generalization of `P`. Here \(t\) is truth-value of belief, and \(\rightarrow\) is inheritance copula <sup><a id="fnr.2.2" class="footref" href="#fn.2" role="doc-backlink">2</a></sup>.
  </p></li>

  <li>Statements are themselves terms too. So there can be higher order statements and inferences.</li>

  <li>Since resources are not infinite, any real time system that is open to new information needs to <a href="forgetting.html#ID-3074C8FF-8E5B-4871-B356-28ABD9C3F5B4">forget</a>. [<a href="file:///Users/bpanthi977/Documents/synced/Notes/papers/Different Conceptions of Learning.pdf#page=4">Page 4</a>]
  <ul class="org-ul">
  <li><a href="file:///Users/bpanthi977/Documents/synced/Notes/papers/Different Conceptions of Learning.pdf#page=4">Absolute Forgetting</a>: Some concepts are totally deleted</li>
  <li><a href="file:///Users/bpanthi977/Documents/synced/Notes/papers/Different Conceptions of Learning.pdf#page=4">Relative Forgetting</a>: As some concepts are use infrequently, their priority value start decreasing and thus they are chosen less in inference process.</li>
  </ul></li>
  </ul>
  </div>
  </div>
  ]]></description>
</item>
<item>
  <title>My Poems</title>
  <link>https://bpanthi977.com/braindump/my_poems.html</link>
  <author>Bibek Panthi</author>
  <guid isPermaLink="false">A4961442-F35D-4C9B-8290-15F0E772508C</guid>
  <pubDate>Fri, 20 Dec 2024 19:56:00 -0600</pubDate>

  <description><![CDATA[<ol class="org-ol">
  <li>2024-11-15 <a href="to_moon.html#ID-E09BF8BD-1EDA-4E39-BF4A-2F6D929F3C5C">जुनलाई</a></li>
  <li>2024-09-16 <a href="ma_bhulxu.html#ID-AC9B2D73-7C55-444A-8643-F1B5F6216C8A">म भुल्छु</a></li>
  <li>2024-09-11 <a href="nai.html#ID-91E83684-C1D3-42DA-BB6D-9CB6BBB50595">नाइँ!</a></li>
  <li>2023-11-24 <a href="gaze_poem.html#ID-0527F444-2A64-43D3-BC48-4D21A7D1FE18">नजर</a></li>
  <li>2023-04-13 <a href="where_does_my_heart_meet_poem.html#ID-9F63A6F1-61EF-489C-B415-7B916CE9F045">तिमीसँग भेट</a></li>
  <li>2023-04-13 <a href="how_poem.html#ID-676E8A8A-4F7A-43B1-9006-A9519E099560">कसरी?</a></li>
  <li>2022-04-16 <a href="saayar_banaauxa.html#ID-B21E75DB-719C-4E55-9597-0BF405F7977A">शायर बनाउँछ</a></li>
  <li>2020-08-15 <a href="awesome_poem.html#ID-A954D9A5-F1D4-4FCD-8329-3D72814F407A">बबाल</a></li>
  </ol>
  ]]></description>
</item>
<item>
  <title>Software Tips for ML Researchers</title>
  <link>https://bpanthi977.com/braindump/software_tips_for_ml_researchers.html</link>
  <author>Bibek Panthi</author>
  <guid isPermaLink="false">D112309B-BA5B-4018-9A20-7E19AB1913E8</guid>
  <pubDate>Wed, 18 Dec 2024 22:20:00 -0600</pubDate>

  <description><![CDATA[<p>
  <a href="https://www.eugenevinitsky.com/posts/quick-software-tips/">https://www.eugenevinitsky.com/posts/quick-software-tips/</a>
  </p>

  <ul class="org-ul">
  <li>Use Hydra (or Pyrallis) for configs. Don't just write the hyperparameters/config parameters in code files.</li>
  <li>Use package manager to manage python version and packages.
  E.g. Conda, uv-pip, Poetry, pixi</li>
  <li>Use git, don't use jupyter notebooks (because they don't play nice with git)</li>
  <li>Don't tune hyperparameters by hand. Use Optuna, Ray Tune or custom tuner.</li>
  <li>Run experiments in cluster not in desktop (quick experiments = quicker progress)</li>
  </ul>
  ]]></description>
</item>
<item>
  <title>Email Notification for PBS Queue</title>
  <link>https://bpanthi977.com/braindump/email_notification_for_pbs_queue.html</link>
  <author>Bibek Panthi</author>
  <guid isPermaLink="false">BCE3846F-A171-445A-96ED-C22EC6507028</guid>
  <pubDate>Wed, 11 Dec 2024 01:37:00 -0600</pubDate>

  <description><![CDATA[<p>
  I had to run some simulation code in a cluster which uses <a href="https://www.openpbs.org/">PBS system</a> for queuing jobs. Since the jobs take a long time to finish, I wanted an email notification when all the jobs are completed. Here are two approaches to do that.
  </p>
  <div id="outline-container-ID-C9F37D85-4FA1-4B16-AEDD-87E5528560F9" class="outline-3">
  <h3 id="ID-C9F37D85-4FA1-4B16-AEDD-87E5528560F9">Approach 1 - PBS system</h3>
  <div class="outline-text-3" id="text-Approach-1---PBS-system">
  <p>
  If you can add flags to the PBS command for submitting jobs (<code>qsub</code>) you can add <code>-m ae -M email@address.com</code> to send email notification when the job is aborted or completed. [Source: <a href="https://www.rcac.purdue.edu/knowledge/hammer/faq/jobs/questions/pbsemailalerts">purdue.edu</a>]
  </p>

  <p>
  The argument to <code>-m</code> are:
  </p>
  <ul class="org-ul">
  <li>a : mail is sent when the job is aborted by the batch system.</li>
  <li>b : mail is sent when the job begins execution.</li>
  <li>e : mail is sent when the job terminates.</li>
  </ul>

  <p>
  This approach is useful when you have only on job to track of. If you have scheduled multiple jobs and want to be notified when all of them complete, next approach would be more useful.
  </p>
  </div>
  </div>
  <div id="outline-container-ID-EECADF75-C529-4FA2-ABCC-C7E0CF3DF2C8" class="outline-3">
  <h3 id="ID-EECADF75-C529-4FA2-ABCC-C7E0CF3DF2C8">Approach 2 - Cronjob</h3>
  <div class="outline-text-3" id="text-Approach-2---Cronjob">
  <p>
  If you can edit cronjobs (cronjob is a system to schedule scripts to be run periodically), then you can add a cronjob to check the PBS queue and notify when the queue is empty.
  </p>

  <p>
  To add a cronjob run <code>crontab -e</code> in the shell and add the following line:
  </p>

  <div class="org-src-container">
  <pre class="src src-text">* * * * * /home/username/check_queue.sh
  </pre>
  </div>

  <p>
  This asks cronjob to run the script <code>check_queue.sh</code> every minute. And in that script, we can check the queue using <code>qstat</code> command and if it is empty, we send a mail. But if we do just that, then an email would be sent ever minute after the queue is empty. So, the script creates a file <code>nocheck</code> after the first email is sent. And the script is written in such a way that it checks for the file <code>nocheck</code> when the script starts and if it is found the script aborts. In this way we get only one email.
  </p>

  <p>
  And next time when you want notification, just delete the nocheck file (<code>rm nocheck</code>).
  </p>

  <div class="org-src-container">
  <label class="org-src-name"><span class="listing-number">Listing 1: </span>check_queue.sh</label><pre class="src src-shell"><span class="org-comment-delimiter">#</span><span class="org-comment">!/bin/</span><span class="org-keyword">sh</span>

  <span class="org-keyword">if</span> [ -f /home/username/nocheck ]; <span class="org-keyword">then</span>
  <span class="org-keyword">exit</span> 1
  <span class="org-keyword">fi</span>

  <span class="org-keyword">if</span> [ $(/opt/pbs/bin/qstat | wc -l ) -le 2 ] ; <span class="org-keyword">then</span>
  mail -s <span class="org-string">"Queue complete"</span> email@address.edu &lt; /dev/null
  touch /home/username/nocheck
  <span class="org-keyword">exit</span> 0
  <span class="org-keyword">fi</span>
  </pre>
  </div>
  </div>
  </div>
  ]]></description>
</item>
<item>
  <title>Citations in Org Mode</title>
  <link>https://bpanthi977.com/braindump/citations_in_org_mode.html</link>
  <author>Bibek Panthi</author>
  <guid isPermaLink="false">4FECF1E4-C5EB-4723-9852-71DA612CB308</guid>
  <pubDate>Mon, 09 Dec 2024 19:50:00 -0600</pubDate>

  <description><![CDATA[<p>
  If you are writing a document in org mode and want to cite some papers or articles as in a research paper you can use the built in <a href="https://orgmode.org/manual/Citation-handling.html">citation handling</a> features of <a href="org_mode.html#ID-83feb6b0-a900-46a4-9e3d-2ccb8d00e8d6">org-mode</a>.
  </p>

  <p>
  Imagine you have a <code>references.bib</code> file with some BiBTeX entries as follows:
  </p>
  <div class="org-src-container">
  <pre class="src src-bibtex"><span class="org-function-name">@article</span>{<span class="org-constant">photon</span>,
  <span class="org-variable-name">title</span>={Photon mapping on programmable graphics hardware},
  <span class="org-variable-name">author</span>={Purcell, Timothy J and Donner, Craig and Cammarano, Mike and Jensen, Henrik Wann and Hanrahan, Pat},
  <span class="org-variable-name">booktitle</span>={ACM SIGGRAPH 2005 Courses},
  <span class="org-variable-name">pages</span>={258--es},
  <span class="org-variable-name">year</span>={2005}
  }
  </pre>
  </div>

  <p>
  Then you cand add a org mode keyword/directive called `#+bibliography` near the head of the document to point to the bib file.
  </p>
  <div class="org-src-container">
  <pre class="src src-org"><span class="org-org-meta-line">#+bibliography: references.bib</span>
  </pre>
  </div>

  <p>
  After this is done you can add reference the paper in your org document:
  </p>

  <div class="org-src-container">
  <pre class="src src-org">Grid construction can be done by using parallel sorting algorithm <span class="org-org-cite">[</span><span class="org-org-ref-cite"><span class="org-org-cite"><a href="cite:@photon">cite:</a></span></span><span class="org-org-ref-cite"><span class="org-org-cite"><span class="org-error"><a href="cite:@photon">@photo</a><a href="cite:@photon">n</a></span></span></span><span class="org-org-cite">]</span>, or by using ... .
  </pre>
  </div>

  <p>
  Finally at the place where you want you bibliography write:
  </p>
  <div class="org-src-container">
  <pre class="src src-org"><span class="org-org-meta-line">#+print_bibliography:</span>
  </pre>
  </div>

  <p>
  Now when you export the document, the citations and bibliography will be generated as per you formatting config.
  </p>

  <p>
  I prefer the following config. The first one for LaTeX export and second one for html export. (So use only one of these at a time):
  </p>
  <div class="org-src-container">
  <pre class="src src-org"><span class="org-org-meta-line">#+cite_export: biblatex numeric,backend=bibtex</span>
  <span class="org-org-meta-line">#+cite_export: basic numeric numeric</span>
  </pre>
  </div>

  <p>
  Or you can add a file local variable as such:
  </p>
  <div class="org-src-container">
  <pre class="src src-org"><span class="org-comment"># Local Variables&#58;</span>
  <span class="org-comment"># org-cite-export-processors: ((latex biblatex "numeric,backend=bibtex") (html basic "numeric" "numeric"))</span>
  <span class="org-comment"># End:</span>
  </pre>
  </div>
  ]]></description>
</item>
<item>
  <title>Cloud Storage</title>
  <link>https://bpanthi977.com/braindump/cloud_storage.html</link>
  <author>Bibek Panthi</author>
  <guid isPermaLink="false">6B72DE71-C418-49A3-A48F-928DE10A1C7A</guid>
  <pubDate>Sat, 30 Nov 2024 22:43:00 -0600</pubDate>

  <description><![CDATA[<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">
  <caption class="t-above"><span class="table-number">Table 1:</span> Comparision of Cloud Storage Providers (only providers supported by rclone are listed).</caption>

  <colgroup>
  <col  class="org-left" />

  <col  class="org-right" />

  <col  class="org-right" />

  <col  class="org-left" />
  </colgroup>
  <thead>
  <tr>
  <th scope="col" class="org-left">Provider</th>
  <th scope="col" class="org-right">Yearly Price ($)</th>
  <th scope="col" class="org-right">Storage (TB)</th>
  <th scope="col" class="org-left">Transfer per Month (TB)</th>
  </tr>
  </thead>
  <tbody>
  <tr>
  <td class="org-left">OneDrive Family</td>
  <td class="org-right">100</td>
  <td class="org-right">6 <sup><a id="fnr.5.5" class="footref" href="#fn.5" role="doc-backlink">5</a></sup></td>
  <td class="org-left">&#xa0;</td>
  </tr>

  <tr>
  <td class="org-left"><a href="https://one.google.com/plans">Google Drive</a></td>
  <td class="org-right">100</td>
  <td class="org-right">2</td>
  <td class="org-left">&#xa0;</td>
  </tr>

  <tr>
  <td class="org-left"><a href="https://jottacloud.com/en/pricing?category=jottacloud-personal">Jottacloud</a></td>
  <td class="org-right">70</td>
  <td class="org-right">1</td>
  <td class="org-left">&infin;</td>
  </tr>

  <tr>
  <td class="org-left">OneDrive</td>
  <td class="org-right">60</td>
  <td class="org-right">1</td>
  <td class="org-left">&#xa0;</td>
  </tr>

  <tr>
  <td class="org-left">OneDrive</td>
  <td class="org-right">70</td>
  <td class="org-right">1</td>
  <td class="org-left">&#xa0;</td>
  </tr>

  <tr>
  <td class="org-left">pCloud</td>
  <td class="org-right">120, 100<sup><a id="fnr.2.2" class="footref" href="#fn.2" role="doc-backlink">2</a></sup></td>
  <td class="org-right">2</td>
  <td class="org-left">&#xa0;</td>
  </tr>

  <tr>
  <td class="org-left">pCloud (Lifetime)</td>
  <td class="org-right">599, 399<sup><a id="fnr.2.2" class="footref" href="#fn.2" role="doc-backlink">2</a></sup></td>
  <td class="org-right">2</td>
  <td class="org-left">&#xa0;</td>
  </tr>

  <tr>
  <td class="org-left">OpenDrive</td>
  <td class="org-right">100</td>
  <td class="org-right">&infin;</td>
  <td class="org-left">Throttled</td>
  </tr>

  <tr>
  <td class="org-left">Mega</td>
  <td class="org-right">106</td>
  <td class="org-right">2</td>
  <td class="org-left">24</td>
  </tr>

  <tr>
  <td class="org-left">Jottacloud</td>
  <td class="org-right">120</td>
  <td class="org-right">&infin;</td>
  <td class="org-left">5</td>
  </tr>

  <tr>
  <td class="org-left"><a href="https://mypikpak.com/drive/payment">PikPak</a></td>
  <td class="org-right">86, 40<sup><a id="fnr.3.3" class="footref" href="#fn.3" role="doc-backlink">3</a></sup></td>
  <td class="org-right">10</td>
  <td class="org-left">4</td>
  </tr>

  <tr>
  <td class="org-left">Yandex</td>
  <td class="org-right">44, 20<sup><a id="fnr.4.4" class="footref" href="#fn.4" role="doc-backlink">4</a></sup></td>
  <td class="org-right">1</td>
  <td class="org-left">&#xa0;</td>
  </tr>
  </tbody>
  </table>

  <ul class="org-ul">
  <li>A review of backup technologies and how to choose among them (for businesses and personal use): <a href="https://www.starwindsoftware.com/blog/where-to-keep-your-backups-storage-types-explained/">starwindsoftware.com</a>
  <ul class="org-ul">
  <li>Tape storage is still the best for high volume of backup data requirements</li>
  <li>NAS are good</li>
  <li>Public cloud storage providers are also cost effective and reliable for lower data requirements</li>
  </ul></li>
  </ul>

  <p>
  In conclusion, if you have any one else to share with, the OneDrive Family is the best offer in terms of cost, reliability and transfer speed. Apart from that Google Drive and Jottacloud are also good. I don't know much about Jottacloud's reliability. Though the people on internet find it good.
  </p>
  ]]></description>
</item>
<item>
  <title>Debugging C with DAP in Emacs</title>
  <link>https://bpanthi977.com/braindump/debugging_c_with_dap_in_emacs.html</link>
  <author>Bibek Panthi</author>
  <guid isPermaLink="false">4310D4DF-6E5E-464A-B74A-56F3A6084EA9</guid>
  <pubDate>Thu, 14 Nov 2024 22:30:00 -0600</pubDate>

  <description><![CDATA[<p>
  Debug Adapter Protocol (DAP) is a protocol in the spirit of LSP, for unifing debugger features and interfaces.
  </p>

  <p>
  <code>dap-mode</code> in Emacs provides the necessary ui for Emacs to connect with debuggers. And for any language it can connect to the language specific debugger if we configure it properly.
  </p>

  <p>
  Many such configuration (called <code>debug-provider</code>) are bundled with <code>dap-mode</code>. For C &amp; C++, I use <code>dap-codelldb</code>. A <code>debug-provider</code> has a name and provides a function that populates the <code>dap</code> startup parameters. Usually the provider populates the debugger program location, server port and other similar stuff.  For example the dap-codelldb registers a debug-provider named "lldb".
  </p>

  <div class="org-src-container">
  <pre class="src src-elisp">(dap-register-debug-provider
  <span class="org-string">"lldb"</span>
  (<span class="org-keyword">lambda</span> (conf)
  (<span class="org-keyword">let</span> ((debug-port (dap--find-available-port)))
  (plist-put conf <span class="org-builtin">:program-to-start</span> (format <span class="org-string">"%s --port %s"</span> dap-codelldb-debug-program debug-port))
  (plist-put conf <span class="org-builtin">:debugServer</span> debug-port))
  (plist-put conf <span class="org-builtin">:host</span> <span class="org-string">"localhost"</span>)
  (plist-put conf <span class="org-builtin">:type</span> <span class="org-string">"lldb"</span>)
  (plist-put conf <span class="org-builtin">:cargo</span> <span class="org-string">""</span>)
  conf))
  </pre>
  </div>

  <p>
  For any project we might need to debug muliple program, it is the purpose of <code>debug-template</code> to specify other parameters such as <code>:program</code>, <code>:cwd</code> (working direction) and program arguments. Instead of defining debug-template in elisp, dap also supports <code>.vscode/launch.json</code> format used by VSCode. A sample launch.json is as follows [See <a href="https://code.visualstudio.com/docs/editor/debugging#_launchjson-attributes">this</a> for launch.json format and <a href="https://code.visualstudio.com/docs/editor/variables-reference">this</a> for variables supported in launch.json]:
  </p>

  <div class="org-src-container">
  <pre class="src src-json">{
  <span class="org-keyword">"version"</span>: <span class="org-string">"0.2.0"</span>,
  <span class="org-keyword">"configurations"</span>: [
  {
  <span class="org-keyword">"name"</span>: <span class="org-string">"Debug main program"</span>,
  <span class="org-keyword">"type"</span>: <span class="org-string">"lldb"</span>,
  <span class="org-keyword">"request"</span>: <span class="org-string">"launch"</span>,
  <span class="org-keyword">"program"</span>: <span class="org-string">"${workspaceFolder}/out/main"</span>,
  <span class="org-keyword">"args"</span>: [],
  <span class="org-keyword">"stopAtEntry"</span>: <span class="org-constant">false</span>,
  <span class="org-keyword">"cwd"</span>: <span class="org-string">"${workspaceFolder}"</span>,
  <span class="org-keyword">"environment"</span>: [],
  <span class="org-keyword">"externalConsole"</span>: <span class="org-constant">false</span>
  }
  ]
  }
  </pre>
  </div>

  <p>
  Or you can specify the same template in elisp. Note that the dap-variables (like "workspaceFolder", "fileDirname", "env:" etc. See <a href="https://code.visualstudio.com/docs/editor/variables-reference">code.visualstudio.com</a>) are exapanded properly by dap (see <code>dap-variables-expand</code> for implementation)
  </p>

  <div class="org-src-container">
  <pre class="src src-elisp">(dap-register-debug-template <span class="org-string">"Debug main"</span>
  (list <span class="org-builtin">:type</span> <span class="org-string">"lldb"</span>
  <span class="org-builtin">:program</span> <span class="org-string">"${workspaceFolder}/out/main"</span>
  <span class="org-builtin">:cwd</span> <span class="org-string">"${workspaceFolder}"</span>
  <span class="org-builtin">:request</span> <span class="org-string">"launch"</span>))
  </pre>
  </div>
  <div id="outline-container-ID-87CCF5EC-65A5-4542-8BAE-A78114ADD6F0" class="outline-3">
  <h3 id="ID-87CCF5EC-65A5-4542-8BAE-A78114ADD6F0">Installation</h3>
  <div class="outline-text-3" id="text-Installation">
  <ol class="org-ol">
  <li><code>M-x package-install dap-mode</code> : Install dap-mode</li>
  <li><code>(require 'dap-codelldb)</code> : Load the <code>dap-codelldb</code> provider (it is bundled with dap-mode)</li>
  <li><code>M-x dap-codelldb-setup</code> : Install the debug server program</li>
  </ol>
  </div>
  </div>
  ]]></description>
</item>
<item>
  <title>N:M implementation of POSIX Threads API</title>
  <link>https://bpanthi977.com/braindump/n_m_implementation_of_posix_threads_api.html</link>
  <author>Bibek Panthi</author>
  <guid isPermaLink="false">C9AB3255-1148-4C84-A207-71393F8DAFB7</guid>
  <pubDate>Wed, 13 Nov 2024 13:57:00 -0600</pubDate>

  <description><![CDATA[<p>
  I was reading through the pthreads man page (<a href="https://man7.org/linux/man-pages/man7/pthreads.7.html">https://man7.org/linux/man-pages/man7/pthreads.7.html</a>) trying to understand how pthreads is implemented. For linux, pthreads library can be thought of as a wrapper over the kernel syscalls (`clone` and `futex`). The manual goes on to talk about the NPTL implementation which is a 1:1 implementation i.e. it uses 1 kernel thread for each pthread-created-thread.
  </p>

  <p>
  This raises, I believe, a natural question, that could there be any implementation of pthreads, perhaps in other operating system, that uses a different scheme (N:1 or N:M). i.e. could multiple pthread-created-threads be run by a single (or multiple) kernel threads by using cooperative multitasking or other techniques in user space.
  </p>

  <p>
  I am aware of Green Threads (also known as coroutines, or user space threads) and have played a little with coroutines in the Go programming language. I have also found that such concept exist in other languages like Erlang, Elixir. So, the question is not that whether N:1 is possible, but whether
  </p>
  <ol class="org-ol">
  <li>if such implementation would still be POSIX Thread specification compliant.</li>
  <li>And if so, are there any attempts for that in C language.</li>
  </ol>

  <p>
  I believe the answer to 1 is Yes. (Also indicated by Thread Implementation Models section in <a href="https://pubs.opengroup.org/onlinepubs/7908799/xsh/threads.html">https://pubs.opengroup.org/onlinepubs/7908799/xsh/threads.html</a>).
  As for 2, I couldn't find any such implementation by searching on the internet.
  </p>

  <p>
  The following is the excerpt from the pthreads manual that triggered the above thought.
  </p>
  <blockquote>
  <p>
  Linux implementations of POSIX threads
  Over time, two threading implementations have been provided by
  the GNU C library on Linux:
  </p>

  <p>
  LinuxThreads
  This is the original Pthreads implementation. Since glibc
  2.4, this implementation is no longer supported.
  </p>

  <p>
  NPTL (Native POSIX Threads Library)
  This is the modern Pthreads implementation. By comparison
  with LinuxThreads, NPTL provides closer conformance to the
  requirements of the POSIX.1 specification and better
  performance when creating large numbers of threads. NPTL
  is available since glibc 2.3.2, and requires features that
  are present in the Linux 2.6 kernel.
  </p>

  <p>
  Both of these are so-called 1:1 implementations, meaning that
  each thread maps to a kernel scheduling entity. Both threading
  implementations employ the Linux clone(2) system call. In NPTL,
  thread synchronization primitives (mutexes, thread joining, and
  so on) are implemented using the Linux futex(2) system call.
  </p>
  </blockquote>
  ]]></description>
</item>
<item>
  <title>Archive completed tasks in Org mode</title>
  <link>https://bpanthi977.com/braindump/archive_completed_tasks_in_org_mode.html</link>
  <author>Bibek Panthi</author>
  <guid isPermaLink="false">9CD519C1-0320-419F-9131-7B696E9B7A39</guid>
  <pubDate>Wed, 13 Nov 2024 13:59:00 -0600</pubDate>

  <description><![CDATA[<p>
  You might have a tasks.org file where all your todos and timekeeping is placed. After a while the file gets really big and thus you need to archive the old entries that are either completed or cancelled. Here are the commands (which I found from <a href="https://stackoverflow.com/questions/6997387/how-to-archive-all-the-done-tasks-using-a-single-command">stackoverflow.com</a>) to clean up your tasks file:
  </p>

  <p>
  For achiving only one heading
  </p>

  <ol class="org-ol">
  <li>C-c C-x A</li>
  </ol>

  <p>
  For archiving headings in bulk
  </p>
  <ol class="org-ol">
  <li>M-m o a t r (Open agenda view for the buffer)
  <ul class="org-ul">
  <li>M-m o a (Opens Agenda)</li>
  <li>&lt; (Narrows down to this buffer)</li>
  <li>t (Shows TODO entries)</li>
  </ul></li>
  <li>2 r (Show all DONE entries)</li>
  <li>m (Mark for bulk action)</li>
  <li>B A (Bulk Archive)
  <ul class="org-ul">
  <li>B (Bulk action on marked entries)</li>
  <li>A (Archive the entries)</li>
  </ul></li>
  </ol>
  ]]></description>
</item>
<item>
  <title>Named Destinations</title>
  <link>https://bpanthi977.com/braindump/pdfs.html</link>
  <author>Bibek Panthi</author>
  <guid isPermaLink="false">ADFD5184-AA0D-4C61-8246-89B80AFAACB4</guid>
  <pubDate>Fri, 22 Nov 2024 15:12:00 -0600</pubDate>

  <description><![CDATA[<div id="outline-container-ID-29D05A83-50B7-42B8-890D-8F3791ED83B8" class="outline-3">
  <h3 id="ID-29D05A83-50B7-42B8-890D-8F3791ED83B8">Named Destinations</h3>
  <div class="outline-text-3" id="text-Named-Destinations">
  <p>
  Used for referencing/linking parts of another pdf document
  </p>

  <p>
  To list named destinations in a pdf: <a href="https://unix.stackexchange.com/questions/246622/list-named-destinations-in-a-pdf">stackexchange.com</a>
  </p>

  <pre class="example">
  pdfinfo -dests ./abcd.pdf
  </pre>



  <p>
  To link to a named destination use the url: <a href="https://superuser.com/questions/1384892/how-to-create-url-link-to-the-specific-section-of-the-pdf-file">superuser.com</a>
  </p>

  <pre class="example">
  ./abcd.pdf#named_destination
  </pre>



  <p>
  To link to a specific page, use the url:
  </p>

  <pre class="example">
  ./abcd.pdf#page=12
  </pre>
  </div>
  </div>
  ]]></description>
</item>
<div id="footnotes">
  <h2 class="footnotes">Footnotes: </h2>
  <div id="text-footnotes">

    <div class="footdef"><sup><a id="fn.1" class="footnum" href="#fnr.1" role="doc-backlink">1</a></sup> <div class="footpara" role="doc-footnote"><p class="footpara">
    Actually SPF is checked for the domain in the 'Return-Path' header not the 'From' header. And if the domain in Return-Path and From are different then the email fails a   DMARC test called <a href="https://mxtoolbox.com/dmarc/details/dmarc-tags/aspf">SPF Alignment</a>.
    </p></div></div>

    <div class="footdef"><sup><a id="fn.2" class="footnum" href="#fnr.2" role="doc-backlink">2</a></sup> <div class="footpara" role="doc-footnote"><p class="footpara">
    On Black Friday Offer
    </p></div></div>

    <div class="footdef"><sup><a id="fn.3" class="footnum" href="#fnr.3" role="doc-backlink">3</a></sup> <div class="footpara" role="doc-footnote"><p class="footpara">
    For the first year only
    </p></div></div>

    <div class="footdef"><sup><a id="fn.4" class="footnum" href="#fnr.4" role="doc-backlink">4</a></sup> <div class="footpara" role="doc-footnote"><p class="footpara">
    For 1.5 years, on Black Friday Offer
    </p></div></div>

    <div class="footdef"><sup><a id="fn.5" class="footnum" href="#fnr.5" role="doc-backlink">5</a></sup> <div class="footpara" role="doc-footnote"><p class="footpara">
    1 TB per person. Upto 6 family members.
    </p></div></div>


  </div>
</div></channel>
</rss>
